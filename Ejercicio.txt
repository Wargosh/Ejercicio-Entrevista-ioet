Es importante tener en cuenta que puede usar cualquier lenguaje de programación que desee, pero no puede usar ninguna biblioteca externa para resolver el ejercicio, sin embargo, puede agregar cualquier dependencia para fines de prueba como JUnit, Mockito, etc.

Ejercicio

La empresa ACME ofrece a sus empleados la flexibilidad de trabajar las horas que deseen. Pero debido a algunas circunstancias externas, necesitan saber qué empleados han estado en la oficina dentro del mismo período de tiempo.

El objetivo de este ejercicio es generar una tabla que contenga pares de empleados y con qué frecuencia han coincidido en la oficina.

Entrada: el nombre de un empleado y el horario en el que trabajó, indicando la hora y las horas. Este debe ser un archivo .txt con al menos cinco conjuntos de datos. Puede incluir los datos de nuestros ejemplos a continuación:

Ejemplo 1:

ENTRADA
RENE=MO10:00-12:00,TU10:00-12:00,TH01:00-03:00,SA14:00-18:00,SU20:00-21:00
ASTRID=MO10:00-12:00,TH12:00-14:00,SU20:00-21:00
ANDRES=MO10:00-12:00,TH12:00-14:00,SU20:00-21:00


SALIDA:
ASTRID-RENÉE: 2
ASTRID-ANDRÉS: 3
RENÉ-ANDRÉS: 2

Ejemplo 2:

ENTRADA:
RENÉ=MO10:15-12:00,TU10:00-12:00,TH13:00-13:15,SA14:00-18:00,SU20:00-21:00
ASTRID=MO10:00-12:00,TH12:00-14:00,SU20:00-21:00

SALIDA:
RENÉ-ASTRID: 3

Una vez que haya terminado el ejercicio, cargue la solución en GitHub y envíenos el enlace. No olvides incluir un archivo README.md. Su README debe incluir una descripción general de su solución, una explicación de su arquitectura, una explicación de su enfoque y metodología e instrucciones sobre cómo ejecutar el programa localmente.

Evaluamos muchos aspectos, incluyendo qué tan bien está estructurado su código, diseños de patrones aplicados, pruebas y la calidad de su solución.

La solución no debería necesitar ninguna interfaz de usuario, una aplicación de consola es lo suficientemente buena.

Al enviar su ejercicio, asegúrese de evitar incluir archivos compilados, ya que esto podría considerarse malware. Incluya las instrucciones adecuadas para compilar su proyecto en el archivo README

Este ejercicio debe completarse dentro de una semana. Si por alguna razón no puede terminar a tiempo, háganoslo saber.

test con Jest para js

Caracteristicas:
-permite que en el archivo los días se encuentren en desorden (internamente se ordenarán con respecto al dia al que pertenecen las horas)
- subirlo a github pages o alguna plataforma que permita probar el ejercicio sin descargar nada
- permitir descargar desde github los archivos (el correcto y con diferentes errores)

Problemas encontrados:
- buscar la manera de evitar bucles anidados, sobretodo en la parte de recorrer cada linea, hacer split y recorre dentro del split para las horas de entrada y salida...
- hay que validar que el formato de hora sea solo de 24H y que los rangos sean validos, es decir, 17:00-12:00 no es un rango válido